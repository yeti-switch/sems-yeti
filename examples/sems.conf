#apt install ssl-cert

signaling-interfaces {
    interface lo {
        default-media-interface = lo
        ip4 {
            sip-udp {
                address = 127.0.0.1
                port = 5088
                register-acl {
                    whitelist = 127.0.0.1/24
                    method = reject
                }
            }

            sip-tcp {
                address = 127.0.0.1
                port = 5088
                connect-timeout = 2000
                static-client-port = on
                idle-timeout=900000
            }

            sip-tls {
                address = 127.0.0.1
                port = 5089
                static-client-port = on
                connect-timeout = 2000
                idle-timeout = 900000
                client {
                    protocols =  { TLSv1.2, TLSv1.3 }
                    certificate = /etc/ssl/certs/ssl-cert-snakeoil.pem
                    certificate_key = /etc/ssl/private/ssl-cert-snakeoil.key
                    verify_certificate_chain = false
                    verify_certificate_cn = false
                }
                server {
                    protocols =  { TLSv1.2, TLSv1.3 }
                    certificate = /etc/ssl/certs/ssl-cert-snakeoil.pem
                    certificate_key = /etc/ssl/private/ssl-cert-snakeoil.key
                    ciphers = {ChaCha20Poly1305, AES-256/GCM, AES-128/GCM, AES-256/CCM, AES-128/CCM, AES-256, AES-128}
                    macs = {AEAD, SHA-256, SHA-384, SHA-1}
                    verify_client_certificate = false
                    require_client_certificate = false
                }
            }
        }

        ip6 {
            sip-udp {
                address = ::1
                port = 5088
                force-via-address = on
                use-raw-sockets = off
            }
            sip-tcp {
                address = ::1
                port = 5088
                use-raw-sockets = off
                static-client-port = on
                connect-timeout = 1000
                idle-timeout=900000
                static-client-port = on
            }
            sip-tls {
                address = ::1
                port = 5089
                static-client-port = on
                connect-timeout = 2000
                idle-timeout = 900000
                client {
                    protocols =  { TLSv1.2, TLSv1.3 }
                    certificate = /etc/ssl/certs/ssl-cert-snakeoil.pem
                    certificate_key = /etc/ssl/private/ssl-cert-snakeoil.key
                    verify_certificate_chain = false
                    verify_certificate_cn = false
                }
                server {
                    protocols =  { TLSv1.2, TLSv1.3 }
                    certificate = /etc/ssl/certs/ssl-cert-snakeoil.pem
                    certificate_key = /etc/ssl/private/ssl-cert-snakeoil.key
                    ciphers = {ChaCha20Poly1305, AES-256/GCM, AES-128/GCM, AES-256/CCM, AES-128/CCM, AES-256, AES-128}
                    macs = {AEAD, SHA-256, SHA-384, SHA-1}
                    verify_client_certificate = false
                    require_client_certificate = false
                }
            }
        }
    }
}

media-interfaces {
    interface lo {
        srtp {
            enable_srtp=yes
            sdes {
                profiles = { AES_256_CM_HMAC_SHA1_80, AES_256_CM_HMAC_SHA1_32, AES_CM_128_HMAC_SHA1_80, AES_CM_128_HMAC_SHA1_32, NULL_HMAC_SHA1_80, NULL_HMAC_SHA1_32 }
            }
            dtls {
                client {
                    protocols =  { DTLSv1, DTLSv1.2 }
                    certificate = /etc/ssl/certs/ssl-cert-snakeoil.pem
                    certificate_key = /etc/ssl/private/ssl-cert-snakeoil.key
                    profiles = { AES_256_CM_HMAC_SHA1_80, AES_256_CM_HMAC_SHA1_32, AES_CM_128_HMAC_SHA1_80, AES_CM_128_HMAC_SHA1_32, NULL_HMAC_SHA1_80, NULL_HMAC_SHA1_32 }
                    verify_certificate_chain = false
                    verify_certificate_cn = false
                }
                server {
                    protocols =  { DTLSv1, DTLSv1.2 }
                    certificate = /etc/ssl/certs/ssl-cert-snakeoil.pem
                    certificate_key = /etc/ssl/private/ssl-cert-snakeoil.key
                    profiles = { AES_256_CM_HMAC_SHA1_80, AES_256_CM_HMAC_SHA1_32, AES_CM_128_HMAC_SHA1_80, AES_CM_128_HMAC_SHA1_32, NULL_HMAC_SHA1_80, NULL_HMAC_SHA1_32 }
                    ciphers = {ChaCha20Poly1305, AES-256/GCM, AES-128/GCM, AES-256/CCM, AES-128/CCM, AES-256, AES-128}
                    macs = {AEAD, SHA-256, SHA-384, SHA-1}
                    verify_client_certificate = false
                    # require_client_certificate = false
                }
            }
            zrtp {
                hashes = { S256, S384, N256, N384 }
                ciphers = { AES1, AES2, AES3, 2FS1, 2FS2, 2FS3 }
                authtags = { HS32, HS80, SK32, SK64 }
                dhmodes = { DH2K, EC25, DH3K, EC38, EC52, PRSH, MULT }
                sas = { B32, B256 }
            }
        }

        ip4 {
            rtp {
                address = 127.0.0.1
                low-port = 10000
                high-port = 38767
                dscp = 46
                use-raw-sockets = off
                #~ use-raw-sockets = on
            }
        }

        ip6 {
            rtp {
                address = ::1
                low-port = 10000
                high-port = 38767
                dscp = 46
                use-raw-sockets = off
            }
        }
    }
}

modules {
    module "mp3"{}
    module "opus"{}
    module "wav"{}
    module "gsm"{}
#    module "ilbc"{}
    module "adpcm"{}
    module "l16"{}
    module "g722"{}
#    module "g729bcg"{}
#    module "g723ipp"{}

    module "sctp_bus"{}
    module "http_client"{}

    module "session_timer"{
        session_expires = 90
        minimum_timer = 90
        maximum_timer = 900
    }

    module "jsonrpc"{
        #tcp_md5_password = test
        #host = 127.0.0.1
        listen {
            address = 127.0.0.1
        }
        map(yeti.show.aors, registrar.show.aors)
    }


    /*module "di_log"{
        loglevel = 1
    }*/

    module "prometheus_exporter" {
        address  = "127.0.0.1"
        port = 8081
        metrics_prefix = "sems"
        #omit_now_timesamp = true
        label(host, localhost)
        acl {
            whitelist = { 127.0.0.1, 10.0.0.0/8 }
            method = drop
        }
    }

    module-global "uac_auth" {
        server_secret = "somelongsecret"
        #~ allowed_qops = {auth,auth-int}
        allowed_qops = {auth-int}
    }

    include(/etc/sems/etc/yeti.conf)
}

routing { 
    application=yeti
    register_application=yeti
}

general {
    syslog_loglevel=2
    syslog_facility=LOCAL0

    default_bl_ttl = 10000

    node_id = 8

    shutdown_mode {
        code = 508
        reason = "Test"
        allow_uac = true
    }

    #pcap_upload_queue = pcap

    media_processor_threads = 12
    rtp_receiver_threads = 12
    session_processor_threads = 12
    sip_udp_server_threads = 12
    sip_tcp_server_threads = 12

    dead_rtp_time=0

    enable_zrtp=yes
    enable_srtp=yes
    enable_rtsp=yes

    #force_cancel_route_set = true

    session_limit {
        limit = 12000
    }

    detect_inband_dtmf = true
    dtmf_default_volume = 10
    #signature = "Tonantzintla 618"

    #next_hop_1st_req = true
    #ssl_key_log_file = /tmp/sems.sslkeylog
}
