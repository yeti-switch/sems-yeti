#module "postgresql" {
#    events_queue_name = pg
#}

module "postgresql_proxy" {
    map_file("getprofile", "/etc/yeti/db_map/getprofile.json")
    #map_lua("getprofile", "/etc/yeti/db_map/getprofile.lua")

    map("writecdr", null)
    map("write_auth_log", null)
    #map_upstream_worker(cdr, pg)
    #map_upstream(writecdr, pg)
    #map_upstream(write_auth_log, pg)

    map_file("SELECT * FROM check_states()", "/etc/yeti/db_map/check_states.json")
    #map_file("SELECT * FROM load_interface_in()", "/etc/yeti/db_map/load_interface_in.json")
    map_file("SELECT * FROM load_interface_out()", "/etc/yeti/db_map/load_interface_out.json")
    map_file("SELECT * FROM load_trusted_lb()", "/etc/yeti/db_map/load_trusted_lb.json")
    map_file("SELECT * FROM load_incoming_auth()", "/etc/yeti/db_map/load_incoming_auth.json")
    map_file("SELECT * FROM load_resource_types()", "/etc/yeti/db_map/load_resource_types.json")
    map_file("SELECT * FROM load_codec_groups()", "/etc/yeti/db_map/load_codec_groups.json")
    map_file("SELECT * FROM load_disconnect_code_refuse()", "/etc/yeti/db_map/load_disconnect_code_refuse.json")
    map_file("SELECT * FROM load_disconnect_code_rerouting()", "/etc/yeti/db_map/load_disconnect_code_rerouting.json")
    map_file("SELECT * FROM load_disconnect_code_rewrite()", "/etc/yeti/db_map/load_disconnect_code_rewrite.json")
    map_file("SELECT * FROM load_ip_auth(\$1,\$2)", /etc/yeti/db_map/load_ip_auth.json)

    map("SELECT * FROM load_radius_accounting_profiles()", [])
    map("SELECT * FROM load_radius_profiles()", [])
    map("SELECT * FROM load_sensor()", [])
    map("SELECT * FROM load_stir_shaken_signing_certificates()", [])
    map("SELECT * FROM load_stir_shaken_trusted_certificates()", [])
    map("SELECT * FROM load_stir_shaken_trusted_repositories()", [])
    map("SELECT * FROM load_disconnect_code_refuse_overrides()", [])
    map("SELECT * FROM load_disconnect_code_rerouting_overrides()", [])
    map("SELECT * FROM load_disconnect_code_rewrite_overrides()", [])
    map("SELECT init(\$1,\$2);", [])
    map("SELECT * FROM load_sip_options_probers(\$1)", [])
    map("SELECT * FROM load_registrations_out(\$1,\$2)", [])
}
